// Variables
@import 'variables';

// Form formatting
form {
    position: relative;

    @include flexDisplay(column, center, flex-start);

    a,
    button,
    input {
        align-self: center;
    }
    a {
        margin: 2rem 0;
    }

    p.form-error-msg {
        align-self: flex-start;

        margin: 1.4rem 0;
        margin-top: 0.2rem;
        color: $accentDark;
    }

    .form-box {
        position: relative;

        height: 4rem;
        width: 100%;

        svg,
        input {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
        }

        svg {
            z-index: 2;
            left: 0.9rem;

            height: 1.8rem;
            width: 1.8rem;

            transition: transform $transitionTime ease-in-out;
        }

        input:not([type="checkbox"]) {
            left: 0;
            text-indent: 2.7rem;
        }

        &:hover {
            svg {
                transform: translateY(-50%) scale(1.05);
            }
        }
        &:active {
            svg {
                transform: translateY(-50%) scale(1);
            }
        }

    }
    .form-row {
        @include flexDisplay(row, center, space-between);

        width: 100%;

        .form-item {
            @include flexDisplay(column, flex-start, flex-start);
            width: 48%;

            textarea,
            input:not([type="checkbox"]) {
                width: 100%;

                // &:first-child {
                //     margin-right: 2%;
                // }
            }
        }
    }

    > label {
        align-self: flex-start;
        margin-top: 1rem;
        margin-left: 0.4rem;
    }

}

input,
textarea,
select {

    font-family: inherit;

    &:-webkit-autofill {
        &:hover,
        &focus {
            border: inherit;
            -webkit-text-fill-color: inherit;
            box-shadow: inherit;
            transition: background-color 5000s ease-in-out 0s;
            font-size: inherit;
            font-family: inherit;
        }
    }
}
input,
textarea,
select,
button {
    &:focus {
        outline: none;
    }
}

textarea,
input:not([type="submit"],[type="checkbox"]) {
    width: 100%;
    height: 3.2rem;

    border: none;
    border-radius: $panelCorner;

    font-size: 1.2rem;

    text-indent: 1.6rem;

    font-weight: bold;
}

// textarea,
// input:not([type="checkbox"]) {
//     width: calc(100% - 1.44rem);

//     padding: 0.72rem;
//     margin-bottom: 2rem;

//     font-size: 1.28rem;

//     color: inherit;
//     font-family: inherit;
//     background-color: $inputColor;

//     box-shadow: 0 0 0.1rem 0 $shdwClr;

//     border: none;
//     border-radius: $inputCorner;

//     transition: box-shadow $transitionTime ease-in-out;

//     &:hover {
//         box-shadow: 0 0 0.2rem 0 $shdwClr;
//     }
// }

textarea {
    padding: 1.6rem;
}

button,
input[type="submit"] {
    min-width: 8rem;

    padding: 1rem 2rem;
    margin: 1rem;

    border-width: 0.26rem;
    border-color: $foreColor;
    border-radius: $panelCorner;

    background-color: $accentColor;
    @include hasShadow();

    color: inherit;
    font-family: inherit;
    font-size: 1.2rem;
    font-weight: bold;

    cursor: pointer;

    transition: all $transitionTime ease-in-out;

    &:hover {
        box-shadow: 0 0 0.4rem 0 $shdwClr;

        transform: scale(1.04);
    }
    &:active {
        box-shadow: 0 0 0.4rem 0 $shdwClr;

        background-color: $accentDark;
        transform: scale(1);
    }
}

// Checkbox formatting
label {
    margin-bottom: 0.2rem;

    // Locked form properties
    &.locked {
        color: gray !important;
    }

    // Checkbox formatting
    &.checkOption,
    &.subOption {
        display: inline-block;
        position: relative;
        margin: 0;
        margin-bottom: 0.6rem;

        height: 1.4rem;
        width: 0;

        font-weight: normal;
        color: inherit;
        white-space: nowrap;

        user-select: none;
        cursor: pointer;

        input {
            position: absolute;
            top: 0;
            left: 0;

            height: 0;
            width: 0;

            opacity: 0;

            cursor: pointer;

            // label.check/subOption input:checked ~ .checkbox,
            &:checked {
                ~ .checkbox {
                    svg {
                        stroke: $panelBckColor;
                        fill: $accentColor;
                    }
                }
            }
        }

        &:hover {
            input {
                // label.check/subOption:hover input ~ .checkbox,
                ~ .checkbox {
                    svg {
                        stroke: $accentDark;
                        fill: $panelBckColor;
                    }
                }
                // label.check/subOption:hover input:checked ~ .checkbox,
                &:checked {
                    ~ .checkbox {
                        svg {
                            stroke: $panelBckColor;
                            fill: $accentColor;
                        }
                    }
                }
            }
        }
    }

    &.subOption {
        transform: translate(3.4rem);
    }

}
.checkbox {
    position: absolute;
    left: 0;

    border-radius: 0.2rem;

    text-indent: 1.4rem;

    svg {
        position: absolute;
        left: 0;
        top: 50%;
        transform: translateY(-50%);

        height: 1.2rem;
        width: 1.2rem;

        fill: $panelBckColor;
        stroke: $panelBckColor;

        transition: fill $transitionTime ease-in-out,
                    stroke $transitionTime ease-in-out;
    }
}

input[type="checkbox"] {
    user-select: none;
}

// Profile Image form
#profile-form {
    .profile-image-container {
        align-self: center;

        position: relative;

        margin: 4rem 0;
        width: 18rem;

        overflow: hidden;

        &:hover {
            .edit-overlay {
                opacity: 1;
            }
        }
        &:active {
            .edit-overlay {
                opacity: 1;
            }
        }

        .edit-overlay {
            position: absolute;
            top: 0;
            left: 0;

            @include flexDisplay(column, center, center);

            height: 100%;
            width: 100%;

            background-color: $overlayColor;
            opacity: 0;

            transition: opacity $transitionTime ease-in-out;

            .menu-item {
                position: relative;

                width: 5.4rem;
                height: 5.4rem;
                border-radius: 50%;
                background-color: $overlayFore;

                transition: transform $transitionTime ease-in-out;

                svg {
                    position: absolute;
                    top: 50%;
                    left: 48%;
                    transform: translate(-50%, -50%);

                    fill: $panelBckColor;

                    max-height: 70%;
                    max-width: 70%;

                    cursor: pointer;

                    transition: fill $transitionTime ease-in-out;
                }

                &:hover {
                    transform: scale(1.1);
                    svg {
                        fill: $panelAccentColor;
                    }
                }
                &:active {
                    transform: scale(0.96);
                    svg {
                        fill: $foreLight;
                    }
                }

            }
        }
    }
}

/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 *                 Range slider properties                 *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */
.slider-container {
    @include flexDisplay(row, center, flex-start);

    margin: 1rem 0;
    width: 100%;

    .slider-range {
        height: 0.52rem;
        width: 100%;

        outline: none;
        border: none;

        background: $panelAccentColor;
        border-radius: 10rem;
    }
    .ui-slider {
        position: relative;
        text-align: left;
    }

    .ui-slider-handle,
    .ui-slider-range {
        transition: background 0.3s ease-in-out;
    }
    .ui-slider-handle {
        position: absolute;

        border: 0;
        border-radius: 50%;

        width: 1.5rem;
        height: 1.5rem;

        cursor: pointer;

        transform: translateX(-20%);

        touch-action: none;

        &:focus {
            outline: none;
        }
        &:active {
            transform: translateX(-20%) scale(1.2);
        }
    }

    .ui-slider-range {
        position: absolute;
        display: block;

        border: 0;
        border-radius: 5rem;

        background-position: 0 0;
        height: 0.52rem;
    }


    .min-amount {
        text-align: right;
        margin-right: 1.5rem !important;
    }
    .max-amount {
        margin-left: 1.5rem !important;
    }


}




